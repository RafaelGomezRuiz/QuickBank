@using QuickBank.Core.Application.ViewModels.Payments
@{
    ViewData["Title"] = "Make Loan Payment";
}
@model LoanPaySaveViewModel

<div class="container-fluid">
    <div class="card shadow col-5 offset-4">
        <div class="card-header bg-warning">
            <h1 class="text-center text-light">LOAN PAYMENT</h1>
        </div>
        <div class="card-body">
            <form method="post" asp-controller="Pay" asp-action="LoanPay">
                <div class="mb-3">
                    <label asp-for="LoanIdToPay" class="form-label">Loan to be credited</label>
                    <select asp-for="LoanIdToPay" asp-items="@(new SelectList(Model.Loans,"Id","LoanNumber"))" class="form-control">
                        <option value="0">Select an option</option>
                    </select>
                    @Html.ValidationMessage("InvalidLoanIdOption", "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    <label asp-for="SavingAccountIdFromPay" class="form-label">Account to be debited</label>
                    <select asp-for="SavingAccountIdFromPay" asp-items="@(new SelectList(Model.SavingAccounts,"Id","AccountNumber"))" class="form-control">
                        <option value="0">Select an option</option>
                    </select>
                    @Html.ValidationMessage("InvalidSavingAccountIdOption", "", new { @class = "text-danger" })
                    @Html.ValidationMessage("InvalidBalance", "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    <label asp-for="Amount" class="form-label">Amount </label>
                    <input asp-for="Amount" class="form-control" type="number" step="any">
                    @Html.ValidationMessage("InvalidAmountNull", "", new { @class = "text-danger" })
                    @Html.ValidationMessage("InvalidAmount", "", new { @class = "text-danger" })
                </div>

                @* Load the necesary data for the saving accounts *@
                @if (Model.SavingAccounts.Count == 0)
                {
                    <input type="hidden" asp-for="@Model.SavingAccounts" />
                }
                @for (int i = 0; i < Model.SavingAccounts.Count; i++)
                {
                    <input type="hidden" asp-for="@Model.SavingAccounts[i].Id" />
                    <input type="hidden" asp-for="@Model.SavingAccounts[i].AccountNumber" />
                }

                @* Load the necesary data for the loans *@
                @if (Model.Loans.Count == 0)
                {
                    <input type="hidden" asp-for="@Model.Loans" />
                }
                @for (int i = 0; i < Model.Loans.Count; i++)
                {
                    <input type="hidden" asp-for="@Model.Loans[i].Id" />
                    <input type="hidden" asp-for="@Model.Loans[i].LoanNumber" />
                    <input type="hidden" asp-for="@Model.Loans[i].Description" />
                }


                <div class="input-group">
                    <a asp-controller="Home" asp-action="BasicHome" class="btn btn-warning">cancel</a>
                    <button type="submit" class="btn btn-primary">pay</button>
                </div>

            </form>
        </div>
    </div>
</div>